{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","title","year","summary","poster","genres","lgPoster","to","pathname","state","src","alt","map","genre","index","key","slice","PropsTypes","number","isRequired","string","arrayOf","Home","isLoading","movies","getMovies","a","axious","get","data","setState","this","movie","id","medium_cover_image","large_cover_image","React","Component","Detail","location","history","undefined","push","placeholder","Poster","Navigation","replace","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.036806ff.chunk.js","sourcesContent":["import React from 'react';\r\nimport './About.css';\r\n\r\nfunction About(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>\r\n        Freedom is the freedom to say that two plus two make four. If that is\r\n        granted, all eles follows.\r\n      </span>\r\n      <span>- George Orwell, 1984</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport PropsTypes from 'prop-types';\r\nimport '../components/Movie.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Movie({ title, year, summary, poster, genres, lgPoster }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <Link\r\n        to={{\r\n          pathname: '/movie-detail',\r\n          state: { year, title, summary, poster, genres, lgPoster },\r\n        }}\r\n      >\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => {\r\n              //map() 함수의 두번쨰 인자에는 map() 함수가 반복 실행하며 반환할 배열 원소의 인덱스가 자동으로 들어온다.\r\n              return (\r\n                <li key={index} className=\"movie__genre\">\r\n                  {genre}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.PropsTypes = {\r\n  year: PropsTypes.number.isRequired,\r\n  title: PropsTypes.string.isRequired,\r\n  summary: PropsTypes.string.isRequired,\r\n  poster: PropsTypes.string.isRequired,\r\n  genres: PropsTypes.arrayOf(PropsTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport axious from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  getMovies = async () => {\r\n    // async 와 await 를 사용해서 gaxious.get() 함수의 실행을 기다린다.\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axious.get(\r\n      'https://yts-proxy.now.sh/list_movies.json?sort_by=rating',\r\n    );\r\n    this.setState({\r\n      movies /* movies(state변수) : movies(구조분해 할당으로  받은 데이터 변수) 와 같음*/,\r\n      isLoading: false,\r\n    });\r\n    // ES6에서는 객체의 키와 대입할 변수의 이름이 같다면 코드를 축약 할 수 있다\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map((movie) => (\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                lgPoster={movie.large_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport IronImage from 'react-image-lazy-load-component';\r\nimport 'react-image-lazy-load-component/lib/style.css';\r\nimport './detail.css';\r\n\r\nclass Detail extends React.Component {\r\n  componentDidMount() {\r\n    const { location, history } = this.props;\r\n    if (location.state === undefined) {\r\n      history.push('/');\r\n      /*movie-detail 페이지로 직접 이동 할 경우 home 화면에서 props 값이 넘어오지 못하기 때문에 제대로 된 정보를 보여 줄 수 없다.\r\n      따라서 사용자가 직접 detail페이지로 이동을 한 경우에는 home 화면으로 리다이렉팅 해주어야한디.*/\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const { location } = this.props;\r\n    if (location.state) {\r\n      return (\r\n        <div className=\"detail__container\">\r\n          <IronImage\r\n            placeholder={location.state.Poster}\r\n            src={location.state.lgPoster}\r\n            alt={location.state.title}\r\n          />\r\n          <h3 className=\"movie__title\">{location.state.title}</h3>\r\n          <h5 className=\"movie__year\">{location.state.year}</h5>\r\n          <p className=\"movie__summary\">{location.state.summary}</p>\r\n        </div>\r\n      );\r\n      /* 사용자가 detail 페이지로 직접 이동할경우 state의 값이 home으로 부터 넘어오지 못하기 때문에 오류가 발생한다.\r\n      따라서 null을 reteurn 함으로써 페이지가 home으로 리다이렉팅 될 수 있도록 해야한다.*/\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\" replace>\r\n        Home\r\n      </Link>\r\n      <Link to=\"/about\" replace>\r\n        About\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\n//import axious from 'axios';\r\nimport './App.css';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport About from './routes/About';\r\nimport Home from './routes/Home';\r\nimport Detail from './routes/Detail';\r\nimport Navigation from './components/Navigation';\r\n\r\n//TODO : Detail 화면 만들기 // api를 한국 api로 변경해보기\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Navigation />\r\n      <Route path=\"/\" exact={true} component={Home} />\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/movie-detail\" component={Detail} />\r\n    </HashRouter>\r\n  );\r\n}\r\n/* 라우터는 화면을  이동해주는 장치 path 뒤에 오는 인자는 주소값을 보여준다 기본은 home라우터를, 주소뒤 /about 이 붙으면 about 라우터를 보여줌*/\r\n/* 원래 라우터는 root -> about 순서대로 path props가 있는지 찾는다. 따라서 /about으로 접속할지라도 home과, aobut 컴포넌트가 모두 그려진다.\r\n   그것을 방지하기 위해 root 라우터에 exact={true}를 넣어주면 home 컴포넌트가 그려지는것을 방지할 수 있다. */\r\n\r\n/*class App2 extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  getMovies = async () => {\r\n    // async 와 await 를 사용해서 gaxious.get() 함수의 실행을 기다린다.\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axious.get(\r\n      'https://yts-proxy.now.sh/list_movies.json?sort_by=rating',\r\n    );\r\n    this.setState({\r\n      movies, // movies(state변수) : movies(구조분해 할당으로  받은 데이터 변수) 와 같음\r\n      isLoading: false,\r\n    });\r\n    // ES6에서는 객체의 키와 대입할 변수의 이름이 같다면 코드를 축약 할 수 있다\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map((movie) => (\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poseter={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}*/\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}